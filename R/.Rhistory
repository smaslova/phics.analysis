#install and load package for analyzing phics data
#devtools::install_github('smaslova/phics.analysis')
#library(phics.analysis)
source("glm_fit.R")
source("plot_utils.R")
source("utils.R")
#define which panel you want to look at
#options: bcell, tcell, nkcell
panel = 'nkcell'
#load data:
data = load.data(panel)
data$counts
#data$metadata
#define which variables you would like to consider
#options: "Sex", "Age", "HIV.Status", "Batch", "EBV.Infection","CMV.Infection","HHV6.Infection", "ORL_EBV", "PLS_EBV", "ORL_CMV", "PLS_CMV", "ORL_HHV6", "PLS_HHV6", "ORL_HSV", "PLS_HSV", "Age_group", "Age_group2"
variables = c("Age", "Sex", "HIV.Status")
#compares given variables in primaries younger than 396 days only
#cell proprotions where parent population is <50 cells are removed
out = run.analysis(panel, variables)
results = out$results
metadata = out$data
#see the model that was fit to the data
results$formula
#look at metadata of datapoints used in plots/ mixed linear model
#look at adjusted p-values for all cell populations tested
#results$adjp
#view plots for all significant results
#plots are created using ONLY data points used to fit the model
show.plots(results$plots)
#define directory to save p-values and plots
#it will be created in /results/panel/
dirname = "test"
save.results(results, dirname)
#see the model that was fit to the data
results$formula
out
out$results
out$data
knitr::opts_chunk$set(echo = TRUE)
#check for required packages and install
list.of.packages <- c("ggplot2", "tidyverse", "lme4", "multcomp", "dplyr", "magrittr", "devtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library("ggplot2")
library("tidyverse")
library("multcomp")
library("dplyr")
library("magrittr")
library("devtools")
library("lme4")
#install and load package for analyzing phics data
#devtools::install_github('smaslova/phics.analysis')
#library(phics.analysis)
source("glm_fit.R")
source("plot_utils.R")
source("utils.R")
#define which panel you want to look at
#options: bcell, tcell, nkcell
panel = 'nkcell'
#load data:
data = load.data(panel)
data$counts
#data$metadata
#define which variables you would like to consider
#options: "Sex", "Age", "HIV.Status", "Batch", "EBV.Infection","CMV.Infection","HHV6.Infection", "ORL_EBV", "PLS_EBV", "ORL_CMV", "PLS_CMV", "ORL_HHV6", "PLS_HHV6", "ORL_HSV", "PLS_HSV", "Age_group", "Age_group2"
variables = c("Age", "Sex", "HIV.Status")
#compares given variables in primaries younger than 396 days only
#cell proprotions where parent population is <50 cells are removed
list[results, data] = run.analysis(panel, variables)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(tidyverse)
#choose panel
panel = "nkcell" #tcell, nkcell
#choose infection
inf = "EBV" #"CMV", "HHV6"
#load data
data_file = paste0("./data/", panel, ".rds")
metadata_file = "./data/metadata.rds"
#load bcell panel data
df <- readRDS(data_file)
#load metadata
metadata <- readRDS(metadata_file)
#melt data and merge with metadata
meltdf <- df %>% rownames_to_column('ID') %>%  reshape2::melt() %>% merge(metadata, by="ID", all.x=TRUE)
meltdf <- meltdf[(is.na(meltdf$Person)==FALSE),]
meltdf = meltdf[meltdf$Age<400,]
#plots primaries by age and hiv exposure
plot_age_inf <- function(data, marker, inf, file){
infection = paste0(inf, ".Infection")
labs = c(paste0(inf,"-"), paste0(inf,"+"))
#plot1 - primaries
print(data)
plot1 <- data[data$Person=='P',] %>% drop_na("Age") %>% ggplot(aes(x=Age_group2, y=value,
fill=factor(eval(parse(text = infection)),labels=labs))) +
geom_boxplot(outlier.size = 0) + #turn off outliers on boxplot so they don't overlap with dotplot
geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(0.75), dotsize=0.4) +
theme_bw() + #plot aesthetics
scale_fill_grey(start = 0.5, end = 0.9) + #greyscale
ggtitle(marker) +
guides(fill=guide_legend(title="Infection Status")) +
theme(axis.title.y = element_blank(),  #remove y-axis label
axis.title.x =  element_blank()) #remove x-axis label
#legend.position="none") #remove legend
ggsave(file, plot1)
}
#define directory where plots will be saved
dir.create("./figs_age_inf/")
plot_directory= paste0("./figs_age_inf/", panel, "/")
dir.create(plot_directory)
#plot all markers in list in separate figures
#marker_list = c('CD21pos.B.cells', 'CD21neg', 'CD21int.B.cells')
marker_list = c("TCR gd, CD3 subset", "TCR gd, CD3 subset_CD57+", "CD56+ gd", "CD16+ gd" )
#uncomment if you want to plot ALL markers:
#marker_list = colnames(df)
for(marker in marker_list){
print(marker)
data=meltdf[meltdf$variable==marker,]
name = gsub("/", "_", marker)
print(name)
file=paste(plot_directory,inf,'_',name,'.pdf', sep="")
plot_age_inf(data, marker, inf, file)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(tidyverse)
#choose panel
panel = "nkcell" #tcell, nkcell
#choose infection
inf = "EBV" #"CMV", "HHV6"
#load data
data_file = paste0("./data/", panel, ".rds")
metadata_file = "./data/metadata.rds"
#load bcell panel data
df <- readRDS(data_file)
#load metadata
metadata <- readRDS(metadata_file)
#melt data and merge with metadata
meltdf <- df %>% rownames_to_column('ID') %>%  reshape2::melt() %>% merge(metadata, by="ID", all.x=TRUE)
meltdf <- meltdf[(is.na(meltdf$Person)==FALSE),]
meltdf = meltdf[meltdf$Age<400,]
#plots primaries by age and hiv exposure
plot_age_inf <- function(data, marker, inf, file){
print("PLOTTING")
infection = paste0(inf, ".Infection")
labs = c(paste0(inf,"-"), paste0(inf,"+"))
#plot1 - primaries
print(data)
plot1 <- data[data$Person=='P',] %>% drop_na("Age") %>% ggplot(aes(x=Age_group2, y=value,
fill=factor(eval(parse(text = infection)),labels=labs))) +
geom_boxplot(outlier.size = 0) + #turn off outliers on boxplot so they don't overlap with dotplot
geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(0.75), dotsize=0.4) +
theme_bw() + #plot aesthetics
scale_fill_grey(start = 0.5, end = 0.9) + #greyscale
ggtitle(marker) +
guides(fill=guide_legend(title="Infection Status")) +
theme(axis.title.y = element_blank(),  #remove y-axis label
axis.title.x =  element_blank()) #remove x-axis label
#legend.position="none") #remove legend
ggsave(file, plot1)
}
#define directory where plots will be saved
dir.create("./figs_age_inf/")
plot_directory= paste0("./figs_age_inf/", panel, "/")
dir.create(plot_directory)
#plot all markers in list in separate figures
#marker_list = c('CD21pos.B.cells', 'CD21neg', 'CD21int.B.cells')
marker_list = c("TCR gd, CD3 subset", "TCR gd, CD3 subset_CD57+", "CD56+ gd", "CD16+ gd" )
#uncomment if you want to plot ALL markers:
#marker_list = colnames(df)
for(marker in marker_list){
print(marker)
data=meltdf[meltdf$variable==marker,]
name = gsub("/", "_", marker)
print(name)
file=paste(plot_directory,inf,'_',name,'.pdf', sep="")
plot_age_inf(data, marker, inf, file)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(tidyverse)
#choose panel
panel = "nkcell" #tcell, nkcell
#choose infection
inf = "EBV" #"CMV", "HHV6"
#load data
data_file = paste0("./data/", panel, ".rds")
metadata_file = "./data/metadata.rds"
#load bcell panel data
df <- readRDS(data_file)
#load metadata
metadata <- readRDS(metadata_file)
#melt data and merge with metadata
meltdf <- df %>% rownames_to_column('ID') %>%  reshape2::melt() %>% merge(metadata, by="ID", all.x=TRUE)
meltdf <- meltdf[(is.na(meltdf$Person)==FALSE),]
meltdf = meltdf[meltdf$Age<400,]
#plots primaries by age and hiv exposure
plot_age_inf <- function(data, marker, inf, file){
print("PLOTTING")
infection = paste0(inf, ".Infection")
labs = c(paste0(inf,"-"), paste0(inf,"+"))
#plot1 - primaries
print("DATA")
print(data)
plot1 <- data[data$Person=='P',] %>% drop_na("Age") %>% ggplot(aes(x=Age_group2, y=value,
fill=factor(eval(parse(text = infection)),labels=labs))) +
geom_boxplot(outlier.size = 0) + #turn off outliers on boxplot so they don't overlap with dotplot
geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(0.75), dotsize=0.4) +
theme_bw() + #plot aesthetics
scale_fill_grey(start = 0.5, end = 0.9) + #greyscale
ggtitle(marker) +
guides(fill=guide_legend(title="Infection Status")) +
theme(axis.title.y = element_blank(),  #remove y-axis label
axis.title.x =  element_blank()) #remove x-axis label
#legend.position="none") #remove legend
ggsave(file, plot1)
}
#define directory where plots will be saved
dir.create("./figs_age_inf/")
plot_directory= paste0("./figs_age_inf/", panel, "/")
dir.create(plot_directory)
#plot all markers in list in separate figures
#marker_list = c('CD21pos.B.cells', 'CD21neg', 'CD21int.B.cells')
marker_list = c("TCR gd, CD3 subset", "TCR gd, CD3 subset_CD57+", "CD56+ gd", "CD16+ gd" )
#uncomment if you want to plot ALL markers:
#marker_list = colnames(df)
for(marker in marker_list){
print(marker)
data=meltdf[meltdf$variable==marker,]
name = gsub("/", "_", marker)
print(name)
file=paste(plot_directory,inf,'_',name,'.pdf', sep="")
plot_age_inf(data, marker, inf, file)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(tidyverse)
#choose panel
panel = "nkcell" #tcell, nkcell
#choose infection
inf = "EBV" #"CMV", "HHV6"
#load data
data_file = paste0("./data/", panel, ".rds")
metadata_file = "./data/metadata.rds"
#load bcell panel data
df <- readRDS(data_file)
#load metadata
metadata <- readRDS(metadata_file)
#melt data and merge with metadata
meltdf <- df %>% rownames_to_column('ID') %>%  reshape2::melt() %>% merge(metadata, by="ID", all.x=TRUE)
meltdf <- meltdf[(is.na(meltdf$Person)==FALSE),]
meltdf = meltdf[meltdf$Age<400,]
#plots primaries by age and hiv exposure
plot_age_inf <- function(data, marker, inf, file){
print("PLOTTING")
infection = paste0(inf, ".Infection")
labs = c(paste0(inf,"-"), paste0(inf,"+"))
#plot1 - primaries
print("DATA")
print(data)
plot1 <- data[data$Person=='P',] %>% drop_na("Age") %>% ggplot(aes(x=Age_group2, y=value,
fill=factor(eval(parse(text = infection)),labels=labs))) +
geom_boxplot(outlier.size = 0) + #turn off outliers on boxplot so they don't overlap with dotplot
geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(0.75), dotsize=0.4) +
theme_bw() + #plot aesthetics
scale_fill_grey(start = 0.5, end = 0.9) + #greyscale
ggtitle(marker) +
guides(fill=guide_legend(title="Infection Status")) +
theme(axis.title.y = element_blank(),  #remove y-axis label
axis.title.x =  element_blank()) #remove x-axis label
#legend.position="none") #remove legend
ggsave(file, plot1)
}
#define directory where plots will be saved
dir.create("./figs_age_inf/")
plot_directory= paste0("./figs_age_inf/", panel, "/")
dir.create(plot_directory)
#plot all markers in list in separate figures
#marker_list = c('CD21pos.B.cells', 'CD21neg', 'CD21int.B.cells')
marker_list = c("TCR gd, CD3 subset", "TCR gd, CD3 subset_CD57+", "CD56+ gd", "CD16+ gd" )
#uncomment if you want to plot ALL markers:
#marker_list = colnames(df)
for(marker in marker_list){
print(marker)
data=meltdf[meltdf$variable==marker,]
print("DATA:")
print(data)
name = gsub("/", "_", marker)
print(name)
file=paste(plot_directory,inf,'_',name,'.pdf', sep="")
plot_age_inf(data, marker, inf, file)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(tidyverse)
#choose panel
panel = "nkcell" #tcell, nkcell
#choose infection
inf = "EBV" #"CMV", "HHV6"
#load data
data_file = paste0("./data/", panel, ".rds")
metadata_file = "./data/metadata.rds"
#load bcell panel data
df <- readRDS(data_file)
#load metadata
metadata <- readRDS(metadata_file)
#melt data and merge with metadata
meltdf <- df %>% rownames_to_column('ID') %>%  reshape2::melt() %>% merge(metadata, by="ID", all.x=TRUE)
meltdf <- meltdf[(is.na(meltdf$Person)==FALSE),]
meltdf = meltdf[meltdf$Age<400,]
#plots primaries by age and hiv exposure
plot_age_inf <- function(data, marker, inf, file){
print("PLOTTING")
infection = paste0(inf, ".Infection")
labs = c(paste0(inf,"-"), paste0(inf,"+"))
#plot1 - primaries
print("DATA")
print(data)
plot1 <- data[data$Person=='P',] %>% drop_na("Age") %>% ggplot(aes(x=Age_group2, y=value,
fill=factor(eval(parse(text = infection)),labels=labs))) +
geom_boxplot(outlier.size = 0) + #turn off outliers on boxplot so they don't overlap with dotplot
geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(0.75), dotsize=0.4) +
theme_bw() + #plot aesthetics
scale_fill_grey(start = 0.5, end = 0.9) + #greyscale
ggtitle(marker) +
guides(fill=guide_legend(title="Infection Status")) +
theme(axis.title.y = element_blank(),  #remove y-axis label
axis.title.x =  element_blank()) #remove x-axis label
#legend.position="none") #remove legend
ggsave(file, plot1)
}
#define directory where plots will be saved
dir.create("./figs_age_inf/")
plot_directory= paste0("./figs_age_inf/", panel, "/")
dir.create(plot_directory)
#plot all markers in list in separate figures
#marker_list = c('CD21pos.B.cells', 'CD21neg', 'CD21int.B.cells')
marker_list = c("TCR gd, CD3 subset", "CD56+ gd", "CD16+ gd" )
#uncomment if you want to plot ALL markers:
#marker_list = colnames(df)
for(marker in marker_list){
print(marker)
data=meltdf[meltdf$variable==marker,]
print("DATA:")
print(data)
name = gsub("/", "_", marker)
print(name)
file=paste(plot_directory,inf,'_',name,'.pdf', sep="")
plot_age_inf(data, marker, inf, file)
}
#files saved in ./figs_age_inf/PANEL/
out
knitr::opts_chunk$set(echo = TRUE)
#check for required packages and install
list.of.packages <- c("ggplot2", "tidyverse", "lme4", "multcomp", "dplyr", "magrittr", "devtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library("ggplot2")
library("tidyverse")
library("multcomp")
library("dplyr")
library("magrittr")
library("devtools")
library("lme4")
#install and load package for analyzing phics data
#devtools::install_github('smaslova/phics.analysis')
#library(phics.analysis)
source("glm_fit.R")
source("plot_utils.R")
source("utils.R")
#define which panel you want to look at
#options: bcell, tcell, nkcell
panel = 'nkcell'
#load data:
data = load.data(panel)
data$counts
#data$metadata
#define which variables you would like to consider
#options: "Sex", "Age", "HIV.Status", "Batch", "EBV.Infection","CMV.Infection","HHV6.Infection", "ORL_EBV", "PLS_EBV", "ORL_CMV", "PLS_CMV", "ORL_HHV6", "PLS_HHV6", "ORL_HSV", "PLS_HSV", "Age_group", "Age_group2"
variables = c("Age", "Sex", "HIV.Status")
#compares given variables in primaries younger than 396 days only
#cell proprotions where parent population is <50 cells are removed
c(results, data) = run.analysis(panel, variables)
knitr::opts_chunk$set(echo = TRUE)
#check for required packages and install
list.of.packages <- c("ggplot2", "tidyverse", "lme4", "multcomp", "dplyr", "magrittr", "devtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library("ggplot2")
library("tidyverse")
library("multcomp")
library("dplyr")
library("magrittr")
library("devtools")
library("lme4")
#install and load package for analyzing phics data
#devtools::install_github('smaslova/phics.analysis')
#library(phics.analysis)
source("glm_fit.R")
source("plot_utils.R")
source("utils.R")
#define which panel you want to look at
#options: bcell, tcell, nkcell
panel = 'nkcell'
#load data:
data = load.data(panel)
data$counts
#data$metadata
#define which variables you would like to consider
#options: "Sex", "Age", "HIV.Status", "Batch", "EBV.Infection","CMV.Infection","HHV6.Infection", "ORL_EBV", "PLS_EBV", "ORL_CMV", "PLS_CMV", "ORL_HHV6", "PLS_HHV6", "ORL_HSV", "PLS_HSV", "Age_group", "Age_group2"
variables = c("Age", "Sex", "HIV.Status")
#compares given variables in primaries younger than 396 days only
#cell proprotions where parent population is <50 cells are removed
out = run.analysis(panel, variables)
knitr::opts_chunk$set(echo = TRUE)
#check for required packages and install
list.of.packages <- c("ggplot2", "tidyverse", "lme4", "multcomp", "dplyr", "magrittr", "devtools")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library("ggplot2")
library("tidyverse")
library("multcomp")
library("dplyr")
library("magrittr")
library("devtools")
library("lme4")
#install and load package for analyzing phics data
#devtools::install_github('smaslova/phics.analysis')
#library(phics.analysis)
source("glm_fit.R")
source("plot_utils.R")
source("utils.R")
#define which panel you want to look at
#options: bcell, tcell, nkcell
panel = 'nkcell'
#load data:
data = load.data(panel)
data$counts
#data$metadata
#define which variables you would like to consider
#options: "Sex", "Age", "HIV.Status", "Batch", "EBV.Infection","CMV.Infection","HHV6.Infection", "ORL_EBV", "PLS_EBV", "ORL_CMV", "PLS_CMV", "ORL_HHV6", "PLS_HHV6", "ORL_HSV", "PLS_HSV", "Age_group", "Age_group2"
variables = c("Age", "Sex", "HIV.Status")
#compares given variables in primaries younger than 396 days only
#cell proprotions where parent population is <50 cells are removed
out = run.analysis(panel, variables)
#see the model that was fit to the data
results$formula
results = out$results
data = out$data
results = out$results
data = out$data
#see the model that was fit to the data
results$formula
#look at metadata
metadata = data$metadata
#look at metadata
metadata = data$metadata
metadata
#look at metadata
metadata = data$metadata
metadata.columns
#look at metadata
metadata = data$metadata
columns(metadata)
#look at metadata
metadata = data$metadata
metadata
#look at metadata
metadata = data$metadata
metadata$HIV.Status =='HEU'
#look at metadata
metadata = data$metadata
sum(metadata$HIV.Status =='HEU')
#look at metadata
metadata = data$metadata
sum(metadata$HIV.Status =='HEU')
sum(metadata$HIV.Status =='HUU')
